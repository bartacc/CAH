{"version":3,"sources":["components/customToastContainer/index.jsx","components/navigation/index.jsx","pages/deckCreator/index.jsx","components/game/cards/QuestionCard.jsx","components/game/cards/AnswerCard.jsx","components/game/containers/CardsInHand.jsx","components/game/cards/PlayedCard.jsx","components/game/containers/PlayedCards.jsx","components/game/counter/Counter.jsx","components/game/cards/CardReverse.jsx","components/game/deck/Deck.jsx","components/game/dragAndDrop/CardDragPreview.jsx","components/game/dragAndDrop/CustomDragLayer.jsx","components/game/leaderboard/LeaderboardRow.jsx","components/game/leaderboard/Leaderboard.jsx","pages/game/dummyData.js","pages/game/index.jsx","components/container/index.jsx","components/home/header/Header.jsx","contexts/auth.jsx","utils/resources/index.jsx","utils/toastify/index.jsx","components/home/forms/login/index.jsx","components/home/forms/register/index.jsx","components/home/card/BackCard.jsx","components/home/card/CardWrapper.jsx","components/home/card/FrontCard.jsx","components/home/card/CardsContainer.jsx","components/home/guest/PlayAsGuest.jsx","pages/home/index.jsx","pages/room/index.jsx","components/navigation/rules.jsx","components/roomList/menu.jsx","components/roomList/search.jsx","components/roomList/tile.jsx","pages/roomList/fakeData.js","pages/roomList/index.jsx","components/transitions/index.jsx","components/routing/Routing.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CustomToastContainer","position","transition","Bounce","autoClose","hideProgressBar","closeOnClick","pauseOnHover","Navigation","pathname","useLocation","className","to","DeckCreator","QuestionCard","text","AnswerCard","children","playCardFromHand","id","useDrag","item","type","content","collect","monitor","isDragging","end","didDrop","drag","preview","useEffect","getEmptyImage","captureDraggingState","ref","style","opacity","CardsInHand","cards","map","cardText","PlayedCard","PlayedCards","numberOfCards","useDrop","accept","isOver","canDrop","drop","playedCards","Array","i","card","push","Counter","CardReverse","color","rightOffset","bottomOffset","right","bottom","Deck","cardsLeft","cardsMax","cardsToRender","cardElements","element","CardDragPreview","getItemStyles","initialOffset","currentOffset","display","x","y","transform","WebkitTransform","CustomDragLayer","useDragLayer","getItem","getInitialSourceClientOffset","getSourceClientOffset","LeaderboardRow","icon","state","nick","points","Poker","theme","Correct","strokeWidth","Loading","spin","Leaderboard","playersInfo","cardsInHandData","leaderboardData","Game","useState","cardsPlayed","setCardsPlayed","cardsInHand","setCardsInHand","canPlayCard","cardID","console","log","removeCardFromHand","filter","DndProvider","backend","HTML5Backend","Container","Header","AuthContext","createContext","AuthProvider","accessToken","setAccessToken","token","localStorage","Provider","value","setItem","login","username","password","axios","post","register","played","won","Center","styled","div","TextError","h4","TextSuccess","toastError","message","toast","error","toastSuccess","success","Login","setUsername","setPassword","useContext","history","useHistory","handleSubmit","e","a","preventDefault","result","data","response","onSubmit","placeholder","onChange","target","Register","BackCard","CardWrapper","side","activeCard","isFlipped","flipDirection","FrontCard","handleClick","onClick","CardsContainer","setActiveCard","bind","PlayAsGuest","Home","Room","Popup","props","handleClose","Menu","isOpen","setIsOpen","togglePopup","Back","Log","PlusCross","Sort","Search","multiply","label","Tile","roomInfo","_","name","decks","deckStd","players","User","roomsData","roomId","RoomList","PageTransitions","keyValue","SwitchTransition","component","CSSTransition","classNames","timeout","Routing","render","location","key","exact","path","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97a37aa6.chunk.js","sourcesContent":["import React from 'react';\nimport { Bounce, ToastContainer } from 'react-toastify';\n\nexport const CustomToastContainer = () => (\n  <ToastContainer\n    position=\"top-center\"\n    transition={Bounce}\n    autoClose={2000}\n    hideProgressBar\n    closeOnClick\n    pauseOnHover\n  />\n);\n","import './style.css';\n\nimport React from 'react';  \nimport { Link, useLocation } from 'react-router-dom';\n\nconst Navigation = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <nav className=\"navigation\">\n      <ul>\n        <li className={pathname == '/' ? 'active' : ''}>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className={pathname == '/deckCreator' ? 'active' : ''}>\n          <Link to=\"/deckCreator\">Deck Creator</Link>\n        </li>\n        <li className={pathname == '/room' ? 'active' : ''}>\n          <Link to=\"/room\">Room</Link>\n        </li>\n        <li className={pathname == '/roomList' ? 'active' : ''}>\n          <Link to=\"/roomList\">Room List</Link>\n        </li>\n        <li className={pathname == '/game' ? 'active' : ''}>\n          <Link to=\"/game\">Game</Link>\n        </li>\n        <li className={pathname == '/game' ? 'active' : ''}>\n        </li>\n      </ul>\n    </nav>\n  );\n};\nexport { Navigation };\n","import React from 'react';\n\nconst DeckCreator = () => (\n  <div className=\"deck-creator\">\n    <h1>Deck Creator</h1>\n  </div>\n);\n\nexport { DeckCreator };\n","import './questionCard.scss';\n\nimport React from 'react';\n\nconst QuestionCard = ({ text }) => (\n  <div className=\"question-card\">\n    <span>{text}</span>\n  </div>\n);\n\nexport { QuestionCard };\n","import './answerCard.scss';\n\nimport React, { useEffect } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\n\nconst AnswerCard = ({ children, playCardFromHand, id }) => {\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: { type: 'card', id: id, content: children },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end(item, monitor) {\n      if (monitor.didDrop()) {\n        playCardFromHand(item.id);\n      }\n    },\n  });\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, []);\n\n  return (\n    <div\n      ref={drag}\n      className=\"answer-card in-hand\"\n      style={isDragging ? { opacity: 0 } : {}}\n    >\n      <span>{children}</span>\n    </div>\n  );\n};\n\nexport { AnswerCard };\n","import './cardsInHand.scss';\n\nimport React from 'react';\n\nimport { AnswerCard } from '../cards/AnswerCard';\n\nconst CardsInHand = ({ cards, playCardFromHand }) => {\n  return (\n    <div className=\"cards-in-hand\">\n      {cards.map(({ id, cardText }) => (\n        <AnswerCard key={id} id={id} playCardFromHand={playCardFromHand}>\n          {cardText}\n        </AnswerCard>\n      ))}\n    </div>\n  );\n};\n\nexport { CardsInHand };\n","import './playedCard.scss';\n\nimport React from 'react';\n\nconst PlayedCard = () => (\n  <div className=\"played-card\">\n    <span>Cards Against Humanity</span>\n  </div>\n);\n\nexport { PlayedCard };\n","import './playedCards.scss';\n\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\n\nimport { PlayedCard } from '../cards/PlayedCard';\n\nconst PlayedCards = ({ numberOfCards }) => {\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: 'card',\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n    }),\n  });\n\n  const playedCards = Array(numberOfCards);\n  for (let i = 0; i < numberOfCards; i++) {\n    const card = <PlayedCard></PlayedCard>;\n    playedCards.push(card);\n  }\n\n  return (\n    <div\n      ref={drop}\n      className={`played-cards${isOver && canDrop ? ' card-hover' : ''}`}\n    >\n      {playedCards}\n    </div>\n  );\n};\n\nexport { PlayedCards };\n","import './counter.scss';\n\nimport React from 'react';\n\nconst Counter = () => {\n  return <span className=\"counter\">29</span>;\n};\n\nexport { Counter };\n","import './cardReverse.scss';\n\nimport React from 'react';\n\nconst CardReverse = ({ color, rightOffset, bottomOffset, text }) => {\n  return (\n    <div\n      className={'card-reverse ' + color}\n      style={{ right: rightOffset, bottom: bottomOffset }}\n    >\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport { CardReverse };\n","import './deck.scss';\n\nimport React from 'react';\n\nimport { CardReverse } from '../cards/CardReverse';\n\nconst Deck = ({ color, cardsLeft, cardsMax }) => {\n  const cardsToRender = cardsLeft > 10 ? 10 : cardsLeft;\n\n  const cardElements = new Array(cardsToRender);\n  for (let i = 0; i < cardsToRender; i++) {\n    const element = (\n      <CardReverse\n        color={color}\n        bottomOffset={i * 3}\n        rightOffset={i * 3}\n        text={i === cardsToRender - 1 ? 'Cards Against Humanity' : ''}\n      ></CardReverse>\n    );\n    cardElements.push(element);\n  }\n\n  return (\n    <div className={`deck ${color}`}>\n      {cardElements}\n      <span className=\"cards-in-deck-counter\">\n        {cardsLeft}/{cardsMax}\n      </span>\n    </div>\n  );\n};\n\nexport { Deck };\n","import './dragLayer.scss';\n\nimport React from 'react';\n\nconst CardDragPreview = ({ children }) => {\n  return (\n    <div className=\"answer-card card-drag-preview\">\n      <span>{children}</span>\n    </div>\n  );\n};\n\nexport { CardDragPreview };\n","import './dragLayer.scss';\n\nimport React from 'react';\nimport { useDragLayer } from 'react-dnd';\n\nimport { CardDragPreview } from './CardDragPreview';\n\nconst getItemStyles = (initialOffset, currentOffset) => {\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none',\n    };\n  }\n  const { x, y } = currentOffset;\n  const transform = `translate(${x}px, ${y}px)`;\n  return {\n    transform,\n    WebkitTransform: transform,\n  };\n};\n\nconst CustomDragLayer = () => {\n  const { isDragging, item, initialOffset, currentOffset } = useDragLayer(\n    (monitor) => ({\n      item: monitor.getItem(),\n      initialOffset: monitor.getInitialSourceClientOffset(),\n      currentOffset: monitor.getSourceClientOffset(),\n      isDragging: monitor.isDragging(),\n    }),\n  );\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return (\n    <div className=\"drag-layer\">\n      <div style={getItemStyles(initialOffset, currentOffset)}>\n        <CardDragPreview>{item.content}</CardDragPreview>\n      </div>\n    </div>\n  );\n};\n\nexport { CustomDragLayer };\n","import { Correct, Loading, Poker } from '@icon-park/react';\nimport React from 'react';\n\nconst LeaderboardRow = ({ state, nick, points }) => {\n  let icon;\n\n  switch (state) {\n    case 'black':\n      icon = <Poker className=\"leaderboard-state\" theme=\"filled\" />;\n      break;\n    case 'chosen':\n      icon = (\n        <Correct className=\"leaderboard-state\" theme=\"filled\" strokeWidth=\"1\" />\n      );\n      break;\n    case 'choosing':\n      icon = (\n        <Loading className=\"leaderboard-state\" theme=\"filled\" spin=\"true\" />\n      );\n      break;\n    default:\n      icon = <span className=\"leaderboard-state\"></span>;\n  }\n\n  return (\n    <div className=\"leaderboard-row\">\n      {icon}\n      <span className=\"leaderboard-nick\">{nick}</span>\n      <span className=\"leaderboard-points\">{points}</span>\n    </div>\n  );\n};\n\nexport { LeaderboardRow };\n","import './leaderboard.scss';\n\nimport React from 'react';\n\nimport { LeaderboardRow } from './LeaderboardRow';\n\nconst Leaderboard = ({ playersInfo }) => {\n  return (\n    <div className=\"leaderboard\">\n      {playersInfo.map(({ id, state, nick, points }) => (\n        <LeaderboardRow\n          key={id}\n          state={state}\n          nick={nick}\n          points={points}\n        ></LeaderboardRow>\n      ))}\n    </div>\n  );\n};\n\nexport { Leaderboard };\n","const cardsInHandData = [\n  { cardText: 'Card 1', id: 1 },\n  { cardText: 'Another card', id: 2 },\n  { cardText: 'An answer', id: 3 },\n  { cardText: 'This is an answer', id: 4 },\n  { cardText: 'Card 5', id: 5 },\n  { cardText: 'This is an answer', id: 6 },\n  { cardText: 'This is an answer', id: 7 },\n  { cardText: 'This is an answer', id: 8 },\n  { cardText: 'This is an answer', id: 9 },\n  { cardText: 'This is an answer', id: 10 },\n];\n\nconst leaderboardData = [\n  { id: 1, state: 'choosing', nick: 'Player_1', points: 8 },\n  { id: 2, state: 'black', nick: 'Player_2', points: 2 },\n  { id: 3, state: 'choosing', nick: 'Player_3', points: 15 },\n  { id: 4, state: 'chosen', nick: 'Player_4', points: 4 },\n  { id: 5, state: 'chosen', nick: 'Player_5', points: 9 },\n  { id: 6, state: 'choosing', nick: 'Player_6', points: 7 },\n  { id: 7, state: 'chosen', nick: 'Player_7', points: 23 },\n  { id: 8, state: 'chosen', nick: 'Player_8', points: 21 },\n  { id: 9, state: 'choosing', nick: 'Player_9', points: 9 },\n  { id: 10, state: 'choosing', nick: 'Player_10', points: 18 },\n];\n\nexport { cardsInHandData, leaderboardData };\n","import './style.scss';\n\nimport React, { useState } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nimport { QuestionCard } from '../../components/game/cards/QuestionCard';\nimport { CardsInHand, PlayedCards } from '../../components/game/containers';\nimport { Counter } from '../../components/game/counter/Counter';\nimport { Deck } from '../../components/game/deck/Deck';\nimport { CustomDragLayer } from '../../components/game/dragAndDrop/CustomDragLayer';\nimport { Leaderboard } from '../../components/game/leaderboard/Leaderboard';\nimport { cardsInHandData, leaderboardData } from './dummyData';\n\nconst Game = () => {\n  const [cardsPlayed, setCardsPlayed] = useState(0);\n  const [cardsInHand, setCardsInHand] = useState(cardsInHandData);\n\n  const playCardFromHand = (cardID) => {\n    if (canPlayCard(cardID)) {\n      setCardsPlayed(cardsPlayed + 1);\n      removeCardFromHand(cardID);\n    }\n  };\n\n  const canPlayCard = (cardID) => {\n    //TODO: Here check whether the card can be played (Haven't yet played a card and the player is not black)\n    console.log(cardID);\n    return true;\n  };\n\n  const removeCardFromHand = (cardID) => {\n    setCardsInHand(cardsInHand.filter((element) => element.id !== cardID));\n  };\n\n  return (\n    <div className=\"game\">\n      <DndProvider backend={HTML5Backend}>\n        <CardsInHand\n          cards={cardsInHand}\n          playCardFromHand={playCardFromHand}\n        ></CardsInHand>\n        <div className=\"left-side-panel\">\n          <Deck color=\"black\" cardsLeft={23} cardsMax={40}></Deck>\n          <Counter></Counter>\n          <Deck color=\"white\" cardsLeft={44} cardsMax={80}></Deck>\n        </div>\n        <QuestionCard text=\"Fill this sentence _________________\"></QuestionCard>\n        <PlayedCards numberOfCards={cardsPlayed}></PlayedCards>\n\n        <Leaderboard playersInfo={leaderboardData}></Leaderboard>\n        <CustomDragLayer></CustomDragLayer>\n      </DndProvider>\n    </div>\n  );\n};\n\nexport { Game };\n","import './style.scss';\n\nimport React from 'react';\nconst Container = ({ children }) => {\n  return <main className=\"content-container\">{children}</main>;\n};\n\nexport { Container };\n","import './header.scss';\n\nimport React from 'react';\n\nconst Header = ({ children }) => {\n  return <div className=\"header\">{children}</div>;\n};\n\nexport { Header };\n","import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst AuthContext = createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const [accessToken, setAccessToken] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    if (token) setAccessToken(token);\n  }, []);\n\n  const setToken = (token) => {\n    localStorage.setItem('accessToken', token);\n    setAccessToken(token);\n  };\n  return (\n    <AuthContext.Provider\n      value={{ accessToken: accessToken, setAccessToken: setToken }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n","import axios from 'axios';\n\nexport const login = ({ username, password }) =>\n  axios.post('http://localhost:8080/api/user/login', {\n    username,\n    password,\n  });\n\nexport const register = ({ username, password }) =>\n  axios.post('http://localhost:8080/api/user/createUser', {\n    username,\n    password,\n    played: 0,\n    won: 0,\n  });\n","import React from 'react';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TextError = styled.h4``;\nconst TextSuccess = styled.h4``;\n\nexport const toastError = (message) =>\n  toast.error(\n    <Center>\n      <TextError>{message}</TextError>\n    </Center>,\n  );\n\nexport const toastSuccess = (message) =>\n  toast.success(\n    <Center>\n      <TextSuccess>{message}</TextSuccess>\n    </Center>,\n  );\n","import '../style.scss';\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuth } from '../../../../contexts/auth';\nimport { login } from '../../../../utils/resources';\nimport { toastError, toastSuccess } from '../../../../utils/toastify/index';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const { setAccessToken } = useAuth();\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const result = await login({ username, password });\n\n      setAccessToken(result.data.token);\n      toastSuccess('Logged in!');\n      history.push('/roomList');\n    } catch ({ response }) {\n      if (response) toastError(response.data.message);\n      else toastError('Error while connecting to Server');\n    }\n  };\n\n  return (\n    <form className=\"login\" onSubmit={handleSubmit}>\n      <div className=\"up\">\n        <h2>Login</h2>\n        <div className=\"form-group\">\n          <label>Hello, my username is</label>\n          <input\n            placeholder=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <label>and my password</label>\n          <input\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"down\">\n        <div className=\"group\">\n          <button>Confirm</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport { Login };\n","import '../style.scss';\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { register } from '../../../../utils/resources';\nimport { toastError, toastSuccess } from '../../../../utils/toastify/index';\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // TODO: elaborate on instant login & redirect (backend interference)\n    try {\n      await register({ username, password });\n\n      toastSuccess('Signed up!');\n      history.push('/');\n    } catch ({ response }) {\n      if (response) toastError(response.data.message);\n      else toastError('Error while connecting to Server');\n    }\n  };\n\n  return (\n    <form className=\"register\" onSubmit={handleSubmit}>\n      <div className=\"up\">\n        <h2>Register</h2>\n        <div className=\"form-group\">\n          <label>Hello, my username will be:</label>\n          <input\n            placeholder=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <label>and my password</label>\n          <input\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"down\">\n        <div className=\"group\">\n          <button type=\"submit\">Confirm</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport { Register };\n","import './card.scss';\n\nimport React from 'react';\n\nconst BackCard = ({ children }) => {\n  return (\n    <div className=\"card-wrapper\">\n      <div className=\"card-preview card-preview-back card\">\n        <div className=\"card-border\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport { BackCard };\n","import './card.scss';\n\nimport React from 'react';\nimport ReactCardFlip from 'react-card-flip';\n\nconst CardWrapper = ({ side, activeCard, children }) => {\n  return (\n    <div\n      className={`react-card-flip-wrapper react-card-flip-wrapper-${side} ${\n        side === activeCard ? 'active' : ''\n      }`}\n    >\n      <ReactCardFlip isFlipped={activeCard === side} flipDirection=\"horizontal\">\n        {children}\n      </ReactCardFlip>\n    </div>\n  );\n};\n\nexport { CardWrapper };\n","import './card.scss';\n\nimport React from 'react';\n\nconst FrontCard = ({ handleClick, children }) => {\n  return (\n    <div className=\"card-wrapper front\">\n      <div className=\"card-preview card\" onClick={handleClick}>\n        <div className=\"card-border\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport { FrontCard };\n","import './card.scss';\n\nimport React, { useState } from 'react';\n\nimport { Login } from '../forms/login';\nimport { Register } from '../forms/register';\nimport { BackCard } from './BackCard';\nimport { CardWrapper } from './CardWrapper';\nimport { FrontCard } from './FrontCard';\n\nconst CardsContainer = () => {\n  const [activeCard, setActiveCard] = useState(null);\n\n  const handleClick = (side) => {\n    setActiveCard(side);\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <CardWrapper side=\"left\" activeCard={activeCard}>\n        <FrontCard handleClick={handleClick.bind(null, 'left')}>\n          <h2>Login</h2>\n        </FrontCard>\n        <BackCard>\n          <Login />\n        </BackCard>\n      </CardWrapper>\n      <CardWrapper side=\"right\" activeCard={activeCard}>\n        <FrontCard handleClick={handleClick.bind(null, 'right')}>\n          <h2>Register</h2>\n        </FrontCard>\n        <BackCard>\n          <Register />\n        </BackCard>\n      </CardWrapper>\n    </div>\n  );\n};\n\nexport { CardsContainer };\n","import './guest.scss';\n\nimport React from 'react';\n\nconst PlayAsGuest = () => {\n  return (\n    <div className=\"guest-wrapper\">\n      <p className=\"guest-click\">...or play as a guest</p>\n    </div>\n  );\n};\n\nexport { PlayAsGuest };\n","import './style.scss';\n\nimport React from 'react';\n\nimport { Container } from '../../components/container';\nimport { CardsContainer, Header, PlayAsGuest } from '../../components/home';\n\nconst Home = () => (\n  <div className=\"home\">\n    <Container>\n      <div className=\"home-group\">\n        <Header>\n          <h1>\n            Cards against <div className=\"red\">humanity</div>\n          </h1>\n        </Header>\n        <CardsContainer />\n        <PlayAsGuest />\n      </div>\n    </Container>\n  </div>\n);\n\nexport { Home };\n","import React from 'react';\n\nconst Room = () => (\n  <div className=\"room\">\n    <h1>Room</h1>\n  </div>\n);\n\nexport { Room };\n","import React from \"react\";\n \nconst Popup = props => {\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n      <b>Design your Popup</b>\n        <div className = \"textRules\">Before starting the game, host can personalize game.\n          When the game starts, each player get ten white cards. One of the players begins as the Card Czar\nand gets a black card. Players have 30 seconds to fill in gaps by drag and drop one white card to the table, cards are upside down, so other palyers cant see them.\nWhen time is up the Card Czar read answers and choose the funniest one. Then all players can read answers. Finally, the Card\nCzar picks the funniest play, and whoever submitted it gets one point. After the round, a new player becomes the Card Czar and everyone\nget back up to ten white cards.</div>\n        <button>Test button</button>\n        <span className=\"close-icon\" onClick={props.handleClose}>X</span>\n        {props.content}\n      </div>\n    </div>\n  );\n};\n \nexport { Popup };","import \"./menu.scss\";\n\nimport { Back,Log,PlusCross } from '@icon-park/react';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {Popup} from \"../navigation/rules.jsx\";\nconst Menu = () => {\n\n  \n  const [isOpen, setIsOpen] = useState(false);\n \n  const togglePopup = () => {\n  setIsOpen(!isOpen);\n  }\n\n\n    return (\n    <div className=\"menu\">\n      <div className=\"menuText\">\n        <Link to=\"/\" className=\"menuLink\"><Back className=\"menuIcon\"/><br/>Homepage</Link>\n      </div>\n      <div className=\"menuText\">\n        <Link to=\"/deckCreator\" className=\"menuLink\"><Log className=\"menuIcon\"/><br/>Deck Creator</Link>\n      </div>\n      <div className=\"menuText\">\n        <Link to=\"/room\" className=\"menuLink\"><PlusCross className=\"menuIcon\"/><br/>New Room</Link>\n      </div>\n      <input\n      type=\"button\"\n      value=\"Click to Open Popup\"\n      onClick={togglePopup}\n    />\n    {isOpen && <Popup\n      handleClose={togglePopup}\n    />}\n    </div>\n    );\n};\n  export { Menu }\n","import \"./search.scss\";\n\nimport { Search } from '@icon-park/react';\nimport React from 'react';\nconst Sort = () => (\n    <div className='sort'> \n        <p>\n          SEARCH\n          <input type=\"text\"/>\n        <Search className='sortLoupe' type=\"submit\"/>\n        </p>\n        <p>\n        SORT BY:\n      <select>\n\t      <option value>players</option>\n\t      <option >creation time</option>\n        <option >name</option>\n      </select>\n      <select>\n\t      <option value>Low to High</option>\n\t      <option >High to low</option>\n      </select>\n      </p>\n      <p>\n        FILTR BY:\n      <select multiply>\n        <optgroup label=\"Deck\">\n          <option>standard</option>\n          <option>custom</option>\n        </optgroup>\n      </select>\n      </p>\n\t</div>\n)\nexport { Sort };","import \"./tile.scss\";\n\nimport { User } from '@icon-park/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Tile = ({ roomInfo }) => {\n\treturn(\n\t<div className='xd'>\t\n\t{roomInfo.map( _ => <div key={_.id} className=\"tile\">\n\t  <div className=\"tileData\">NAME: {_.name}  </div>\n      <div className=\"tileData\">DECKS: {_.decks}, {_.deckStd}</div>\n      <div className=\"tileData\">PLAYERS: {_.players} <User className=\"tileIcon\"/></div>\n\t  <div className=\"tileJoin\"><Link to=\"/room\" className=\"tileLink\">JOIN</Link></div>\n\t</div>)}\n\t</div>\n);\n};\nexport { Tile };\n","const roomsData = [\n    { name: 'Impostor', roomId: 1, decks: 7, deckStd: 'custom', players: 5 },\n    { name: 'Who cares', roomId: 2, decks: 5, deckStd: 'standard', players: 2 },\n    { name: 'Noobs game', roomId: 3, decks: 2, deckStd: 'standard', players: 7 },\n    { name: 'Random name', roomId: 4, decks: 3, deckStd: 'custom', players: 4 },\n    { name: 'Noobs game', roomId: 3, decks: 2, deckStd: 'standard', players: 7 },\n  ];\n  export {roomsData}","\nimport \"./index.scss\";\n\nimport React from 'react';\n\nimport { Menu } from '../../components/roomList/menu';\nimport { Sort } from '../../components/roomList/search';\nimport { Tile } from '../../components/roomList/tile';\nimport { roomsData } from './fakeData'\n\nconst RoomList = () => (\n  <div className=\"roomList\">\n      <div className=\"row\">\n        <div className=\"column1\"><Menu/></div>\n        <div className=\"column2\">\n          <Sort/>\n          <Tile roomInfo = {roomsData}/>\n        </div>\n      </div>\n  </div>\n);\n\nexport { RoomList };","import './pageTransitions.scss';\n\nimport React from 'react';\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\n\nexport const PageTransitions = ({ keyValue, children }) => {\n  return (\n    <SwitchTransition component={null}>\n      <CSSTransition key={keyValue} classNames=\"fade\" timeout={300}>\n        {children}\n      </CSSTransition>\n    </SwitchTransition>\n  );\n};\n2;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { DeckCreator, Game, Home, Room, RoomList } from '../../pages';\nimport { PageTransitions } from '../transitions/index';\n\nexport const Routing = () => {\n  return (\n    <Route\n      render={({ location }) => {\n        const { key } = location;\n\n        return (\n          <PageTransitions keyValue={key}>\n            <Switch location={location}>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/deckCreator\">\n                <DeckCreator />\n              </Route>\n              <Route path=\"/room\">\n                <Room />\n              </Route>\n              <Route path=\"/roomList\">\n                <RoomList />\n              </Route>\n              <Route path=\"/game\">\n                <Game />\n              </Route>\n            </Switch>\n          </PageTransitions>\n        );\n      }}\n    />\n  );\n};\n","import './App.scss';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { CustomToastContainer } from './components/customToastContainer/index';\nimport { Navigation } from './components/navigation';\nimport { Routing } from './components/routing/Routing';\nimport { AuthProvider } from './contexts/auth';\n\nconst App = () => (\n  <div className=\"app\">\n    <Router>\n      <AuthProvider>\n        <Navigation />\n        <Routing />\n        <CustomToastContainer />\n      </AuthProvider>\n    </Router>\n  </div>\n);\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App.jsx';\nimport { unregister } from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nunregister();\n"],"sourceRoot":""}